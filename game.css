@import url("https://fonts.googleapis.com/css2?family=Poppins:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap");
@import url('https://fonts.googleapis.com/css2?family=Roboto+Mono:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;1,100;1,200;1,300;1,400;1,500;1,600;1,700&display=swap');

:root {
  --bouncy: cubic-bezier(0,2,.75,1);
}

img {
  image-rendering: optimizeSpeed;
  image-rendering: -moz-crisp-edges;
  image-rendering: -o-crisp-edges;
  image-rendering: -webkit-optimize-contrast;
  image-rendering: pixelated;
  image-rendering: optimize-contrast;
  -ms-interpolation-mode: nearest-neighbor;
}

.genericCheckbox {
  min-width: 25px;
  min-height: 25px;
  outline: 2px solid white;
  display: flex;
  justify-content: center;
  align-items: center;
  cursor: pointer;
}

.genericCheckbox::before {
  content: "";
  width: 0px;
  height: 0px;
  background-color: white;
  transition: width var(--bouncy) 250ms, height var(--bouncy) 250ms;
}

.genericCheckbox[checked="true"]::before {
  width: 15px;
  height: 15px;
}

body {
  margin: 0;
  background-color: black;
  color: white;
  font-family: "Poppins", sans-serif;
  user-select: none;
  overflow: hidden;
  cursor: crosshair;
}

input::-webkit-outer-spin-button,
input::-webkit-inner-spin-button {
  -webkit-appearance: none;
  margin: 0;
}

input[type=number] {
  -moz-appearance: textfield;
}

input {
  color: white;
  font-family: 'Roboto Mono', monospace;
  text-align: center;
  width: 125px;
}

freeElement {
  position: absolute;
}

.dbDebug {
  font-family: 'Roboto Mono', monospace;
}

#shop {
  width: 100dvw;
  height: 100dvh;
  display: none;
  justify-content: center;
  align-items: center;
  flex-direction: column;
  gap: 25px;
  position: absolute;
  top: 0;
  left: 0;
  z-index: 2;
  cursor: default;
  background-color: rgb(0, 0, 0, 0.75);
}

#shopUpgradeInfo {
  display: flex;
  flex-direction: column;
  position: relative;
  /* margin-top: 200px; */
}

#shopUpgradeName {
  font-size: 1.25em;
  font-weight: 700;
  padding: 5px 10px;
  background-color: black;
  outline: 3px solid white;
  height: 25px;
  width: fit-content;
  display: flex;
  align-items: center;
  border-radius: 25px;
  position: absolute;
  top: -20px;
  left: -20px;
  z-index: 2;
}

/* BLAME CHROME FOR THIS BULLSHIT */
#shopUpgradeDescContainer {
  display: flex;
  flex-direction: column;
  height: 100%;
  display: flex;
  justify-content: center;
  align-items: center;
  text-align: center;
  height: 100px;
  background-color: black;
  outline: 3px solid white;
  border-radius: 25px;
  width: 500px;
}

#shopUpgradeDesc {
  text-align: center;
}

b,g {
  font-weight: 700;
}
b {
  color: red;
}
g {
  color: lime;
}

#shopUpgrades {
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
  gap: 25px;
}

.shopUpgrade {
  width: 75px;
  height: 75px;
  background-color: black;
  outline: 3px solid white;
  border-radius: 25px;
  display: flex;
  justify-content: center;
  align-items: center;
  cursor: pointer;
  animation: shopUpgradeIn 0.5s var(--bouncy) 1 forwards;
}

.shopUpgrade img {
  width: 32px;
}

@keyframes shopUpgradeIn {
  from {
    scale: 0;
  }
  to {
    scale: 1;
  }
}

.rareUpgrade {
  animation: rareUpgradeGlow 1s linear infinite forwards;
}

@keyframes rareUpgradeGlow {
  0% {
    outline: 3px solid rgb(255, 200, 200);
    filter: drop-shadow(0px 0px 5px rgb(255, 100, 100));
  }
  20% {
    outline: 3px solid rgb(255, 255, 200);
    filter: drop-shadow(0px 0px 5px rgb(255, 255, 100));
  }
  40% {
    outline: 3px solid rgb(200, 255, 200);
    filter: drop-shadow(0px 0px 5px rgb(100, 255, 100));
  }
  60% {
    outline: 3px solid rgb(100, 200, 255);
    filter: drop-shadow(0px 0px 5px rgb(100, 100, 255));
  }
  80% {
    outline: 3px solid rgb(255, 200, 255);
    filter: drop-shadow(0px 0px 5px rgb(255, 100, 255));
  }
  100% {
    outline: 3px solid rgb(255, 200, 200);
    filter: drop-shadow(0px 0px 5px rgb(255, 100, 100));
  }
}

.rareUpgradeButWithoutTheOutline {
  animation: rareUpgradeGlowButJustTheGlowAndNotTheOutline 1s linear infinite forwards;
}

@keyframes rareUpgradeGlowButJustTheGlowAndNotTheOutline {
  0% {
    filter: drop-shadow(0px 0px 5px rgb(255, 100, 100));
  }
  20% {
    filter: drop-shadow(0px 0px 5px rgb(255, 255, 100));
  }
  40% {
    filter: drop-shadow(0px 0px 5px rgb(100, 255, 100));
  }
  60% {
    filter: drop-shadow(0px 0px 5px rgb(100, 100, 255));
  }
  80% {
    filter: drop-shadow(0px 0px 5px rgb(255, 100, 255));
  }
  100% {
    filter: drop-shadow(0px 0px 5px rgb(255, 100, 100));
  }
}

.shopUpgradeNumber {
  position: absolute;
  bottom: -1px;
  left: -1px;
  line-height: 1;
  font-size: 0.9em;
  font-family: 'Roboto Mono';
  background-color: black;
  outline: 2px solid white;
  white-space: nowrap;
}

.shopUpgradeAnim {
  animation: shopUpgradeAnim 0.25s ease-out 1 forwards, shopUpgradeDown 0.5s cubic-bezier(.5,-0.5,1,.5) 1 forwards;
}

@keyframes shopUpgradeDown {
  to {
    translate: 0px 200px;
    scale: 50%;
  }
  99% {
    opacity: 1;
  }
  100% {
    opacity: 0;
  }
}

#shopInventory {
  width: 750px;
  height: 100px;
  margin-top: 50px;
  border-radius: 25px;
  outline: 3px solid white;
  background-color: black;
  display: flex;
  justify-content: center;
  align-items: center;
  flex-wrap: wrap;
  gap: 10px;
  padding: 10px;
  padding-bottom: 15px;
  position: relative;
}

.shopInventoryAnim {
  animation: shopInventory 0.25s ease-out 1 forwards;
}

@keyframes shopInventory {
  from {
    translate: 0px 10px;
  }
}

#shopInventoryLabel {
  position: absolute;
  display: flex;
  justify-content: center;
  width: 100%;
  bottom: -16.5px;
}

#shopInventoryLabel span {
  display: flex;
  justify-content: center;
  align-items: center;
  height: 25px;
  background-color: black;
  outline: 3px solid white;
  font-weight: 700;
  font-size: 1.25em;
  padding: 5px 10px;
  border-radius: 25px;
}

.inventoryUpgrade {
  position: relative;
  cursor: help;
}

.inventoryUpgrade img {
  width: 32px;
}

.inventoryUpgrade span {
  position: absolute;
  bottom: -2px;
  right: -2px;
  font-weight: 700;
  filter: drop-shadow(0px 0px 2px black);
}

#menu-play {
  width: 100dvw;
  height: 100dvh;
  display: flex;
  justify-content: center;
  align-items: center;
  position: absolute;
  top: 0;
  left: 0;
  background-color: black;
  background: url(media/bg.svg);
  background-size: 250px;
  box-shadow: inset 0px 0px 50px 50px black;
  transition: filter ease-in-out 0.5s;
  animation: titleBG 10s linear infinite forwards;
}

#game {
  width: 750px;
  height: 750px;
  background-color: black;
  outline: 2px solid white;
  position: relative;
  box-shadow: inset 0px 0px 0px transparent;
  overflow: hidden;
  display: flex;
  justify-content: center;
  align-items: center;
  transition: box-shadow linear 1s;
}

#gameCanvas {
  width: 100%;
  height: 100%;
  position: absolute;
  top: 0;
  left: 0;
}
#areaText {
  font-size: 3em;
  font-weight: 900;
  opacity: 0.1;
}

#crosshairAmmo {
  z-index: 5;
  position: absolute;
  display: flex;
  background-color: black;
  opacity: 0.5;
  height: 5px;
  width: 30px;
  outline: 1px solid rgb(255, 255, 255, 0.5);
}

#innerCrosshairAmmo {
  height: 100%;
  width: 0%;
  background-color: white;
}

@keyframes crosshairAmmoAnim {
  from {
    width: var(--startingWidth);
  }
  to {
    width: 100%;
  }
}

#ui {
  z-index: 3;
  opacity: 0;
}

#ammoUI {
  font-family: 'Roboto Mono', monospace;
  width: fit-content;
  position: absolute;
  bottom: 10px;
  left: 10px;
}

#ammoNumberBar {
  font-family: "Poppins", sans-serif;
}

#ammoDisplay {
  font-size: 1.5em;
  font-weight: 700;
}

#ammoBar {
  width: 100%;
  height: 5px;
  background-color: grey;
}

#innerAmmoBar {
  height: 100%;
  width: 100%;
  background-color: white;
}

.innerAmmoBarAnim {
  animation: innerAmmoBar var(--reloadSpeed) linear 1 forwards;
}

@keyframes innerAmmoBar {
  to {
    width: 100%;
  }
}

#topLeftUI {
  position: absolute;
  top: 30px;
  right: 30px;
  line-height: 1;
  display: flex;
  align-items: end;
  flex-direction: column;
}

#comboDisplayContainer {
  display: flex;
  align-items: center;
  line-height: 1;
  gap: 5px;
}

#pointsDisplay {
  font-family: 'Roboto Mono', monospace;
  font-size: 2em;
  font-weight: 700;
}

#xpDisplay {
  font-size: 0.9em;
}

#styleDisplay {
  width: 150px;
  height: 10px;
  outline: 2px solid white;
}

#innerStyleDisplay {
  background-color: white;
  width: 50%;
  height: 100%;
  transition: width linear 100ms;
}

.styleDisplayScared {
  animation: styleDisplayScared 100ms cubic-bezier(.5, 0.05, 1, .5) infinite alternate;
}

@keyframes styleDisplayScared {
  from {
    translate: 0px -2px;
  }
  to {
    translate: 0px 2px;
  }
}

#comboDisplay {
  font-family: 'Roboto Mono', monospace;
  font-size: 1.25em;
  font-weight: 700;
  animation: comboDisplayPulse 250ms ease-out 1 forwards;
}

@keyframes comboDisplayPulse {
  from {
    transform: scale(125%);
  }
}

#playerBars {
  position: absolute;
  top: 25px;
  left: 25px;
  display: flex;
  flex-direction: column;
}

.playerBar {
  top: 10px;
  left: 10px;
  display: flex;
  align-items: center;
  gap: 10px;
}

.playerBarContainer {
  width: 250px;
  height: 10px;
  background-color: black;
  outline: 1px solid white;
  overflow: hidden;
  position: relative;
}

#healthBar, #superBar {
  position: absolute;
  width: 0;
  height: 100%;
  z-index: 2;
  transition: width cubic-bezier(0,1,.5,1) 0.5s;
}

#lowerHealthBar {
  position: absolute;
  width: 0;
  height: 100%;
  background-color: rgb(100, 0, 0);
  transition: width ease-in-out 1s 1s;
}

#statsContainer {
  position: absolute;
  left: 25px;
  top: 0;
  height: 100dvh;
  display: flex;
  align-items: center;
  transition: left ease-in-out 250ms;
}

#stats {
  display: flex;
  flex-direction: column;
  line-height: 1.1;
}

.statTitle {
  font-size: 1.1em;
  font-weight: 700;
}

#bigHealthBarContainer {
  pointer-events: none;
  position: absolute;
  top: 10px;
  left: 0;
  max-height: 150px;
  width: 100dvw;
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 10px;
}

.bigHealthBar {
  width: 50dvw;
  height: 25px;
  position: relative;
  /* outline: 2px solid black, 4px solid white; */
  box-shadow: 0px 0px 0px 2px black, 0px 0px 0px 3px white;
  background-color: rgb(50, 50, 50);
  overflow: hidden;
  animation: bigHealthBarIn 500ms cubic-bezier(0,1,.5,1) 1 forwards;
}

@keyframes bigHealthBarIn {
  from {
    height: 0;
  }
}

.bigHealthBarText {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  display: flex;
  justify-content: center;
  align-items: center;
  font-weight: 700;
  z-index: 2;
  filter: drop-shadow(0px 0px 5px black);
}

.innerBigHealthBar {
  background-color: red;
  height: 100%;
  width: 100%;
  animation: bigHealthBarAnim 2s cubic-bezier(0,1,.75,1) 1 forwards;
}

@keyframes bigHealthBarAnim {
  from {
    width: 0%;
  }
}

#styleContainer {
  display: flex;
  align-items: center;
  width: 250px;
}

#styleUI {
  display: flex;
  flex-direction: column-reverse;
  justify-content: flex-end;
  width: 100%;
  height: 250px;
  padding: 5px;
  overflow: hidden;
  transition: opacity ease-in-out 1s;
  mask-image: linear-gradient(to top, rgba(0, 0, 0, 0), 35%, rgba(0, 0, 0, 1));}

.style {
  height: 20px;
  min-height: 20px;
  overflow: hidden;
  display: flex;
  justify-content: space-between;
  align-items: center;
  gap: 5px;
  transition: opacity ease-in-out 1s;
  animation: styleIn 250ms ease-out 1 forwards;
}

.style span {
  white-space: nowrap;
}

coolLine {
  height: 1px;
  width: 100%;
  background-color: rgba(255, 255, 255, 0.5);
}

.style span:nth-child(1) {
  font-weight: 700;
}

@keyframes styleIn {
  from {
    height: 0;
    min-height: 0;
  }
  to {
    height: 20px;
  }
}

#gameChallenges {
  position: absolute;
  bottom: 10px;
  right: 10px;
  display: flex;
  flex-direction: column;
  gap: 5px;
}

.gameChallenge {
  padding: 5px;
  width: 350px;
  outline: 2px solid white;
  background-color: rgb(0, 0, 0 , 0.5);
  backdrop-filter: blur(10px);
}

.gameChallengeInfo {
  display: flex;
  justify-content: space-between;
}

.gameChallengeInfo span:nth-child(2) {
  font-family: 'Roboto Mono', monospace;
}

.gameChallengeBar {
  width: 100%;
  height: 2px;
  background-color: grey;
}

.gameChallengeInnerBar {
  height: 100%;
  width: 50%;
  background-color: white;
}

#toolboxContainer {
  height: 100dvh;
  display: flex;
  align-items: center;
  position: absolute;
  right: -383px;
  /* right: 0; */
  bottom: 0;
  z-index: 2;
  cursor: default;
  transition: right ease-in-out 0.25s;
}

#toolboxContainer:hover {
  right: 0px;
}

#toolboxTab {
  font-size: 1.25em;
  font-weight: 700;
  padding: 5px 0px;
  height: 125px;
  width: 40px;
  outline: 3px solid white;
  border-radius: 25px 0 0 25px;
  display: flex;
  justify-content: center;
  align-items: center;
  text-align: center;
  background-color: black;
  transition: width ease-in-out 0.25s;
  overflow: hidden;
}

#toolboxTab span {
  white-space: nowrap;
  rotate: -90deg;
}

#toolbox {
  width: 380px;
  height: 700px;
  outline: 3px solid white;
  background-color: black;
  border-radius: 5px 0 0 5px;
  display: flex;
  flex-direction: column;
}

#toolboxMenus {
  display: flex;
  align-items: center;
  justify-content: space-between;
  height: 50px;
  width: 100%;
  gap: 25px;
  border-bottom: 3px solid white;
}

#toolboxMenus button {
  color: white;
  background-color: transparent;
  border: none;
  font-family: 'Roboto Mono', monospace;
  font-weight: 900;
  cursor: pointer;
}

#innerToolbox {
  /* padding: 10px; */
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
  position: relative;
  gap: 10px;
}

#toolboxHelp {
  height: fit-content;
  border-top: 3px solid white;
  padding: 5px;
  color: grey;
  font-family: 'Roboto Mono', monospace;
}

.toolboxEnemyContainer {
  width: calc(100% - 20px);
  padding: 10px;
  max-height: 500px;
  overflow: scroll;
  scrollbar-width: none;
  display: flex;
  justify-content: center;
  flex-wrap: wrap;
  gap: 10px;
  padding-bottom: 50px;
}

.toolboxButton {
  display: flex;
  justify-content: center;
  align-items: center;
  position: relative;
  width: 75px;
  height: 75px;
  outline: 3px solid white;
  border-radius: 25px;
  cursor: pointer;
}

.toolboxButton img {
  width: 32px;
}

.enemyDisplay {
  width: 50px;
  height: 50px;
  background-color: white;
}

#enemyD {
  aspect-ratio: 1 / 1;
  position: absolute;
  opacity: 0.5;
}

.toolboxInputContainer {
  display: flex;
  flex-direction: column;
  align-items: center;
}

.toolboxInput {
  background-color: black;
  outline: 3px solid white;
  border: none;
}

.toolboxWaveContainer {
  position: absolute;
  bottom: 0px;
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
  align-items: center;
  gap: 3px;
  background: linear-gradient(transparent, black);
  height: 65px;
  width: 100%;
}

.toolboxThinButton {
  background-color: black;
  outline: 3px solid white;
  border: none; 
  color: white;
  font-family: 'Roboto Mono', monospace;
  cursor: pointer;
}

.toolboxThinButton:hover {
  background-color: rgb(50, 50, 50);
}

#enemyCreateContainer {
  position: absolute;
  right: 0px;
  top: 0;
  height: 100dvh;
  display: flex;
  align-items: center;
  padding: 10px;
}

#enemyCreate {
  width: 380px;
  height: 700px;
  outline: 3px solid white;
  background-color: black;
  border-radius: 5px 0 0 5px;
  display: flex;
  flex-direction: column;
  padding: 10px;
}

#enemyCreateHeader {
  display: flex;
  justify-content: space-between;
  font-size: 1.25em;
}

#toolbox textarea {
  width: 300px;
  font-family: 'Roboto Mono', monospace;
  background-color: rgb(10, 10, 10);
  color: white;
  height: 300px;
  resize: none;
  border: none;
  outline: 2px solid white;
  font-size: 0.75em;
  margin-top: 5px;
}


#gun {
  width: 20px;
  height: 20px;
  position: absolute;
  z-index: 3;
  background-image: url(media/gun.png);
  background-size: contain;
  background-position: center;
  transition: translate ease-in-out 0.25s;
}

#player {
  width: 50px;
  height: 50px;
  position: absolute;
  background-position: center;
  background-size: cover;
  z-index: 3;
  transition: outline cubic-bezier(0,3,.5,1) 0.5s;
}

#playerTextureContainer {
  width: 100%;
  height: 100%;
}

#playerTextureContainer img {
  width: 100%;
  height: 100%;
}

@keyframes backflip {
  to {
    transform: rotateX(360deg);
  }
}

@keyframes gayJuice {
  from {
    filter: hue-rotate(0deg);
  }
  to {
    filter: hue-rotate(360deg);
  }
}

.tauntFlash {
  aspect-ratio: 1 / 1;
  position: absolute;
  background-image: url(media/tauntFlash.png);
  background-size: contain;
  background-position: center;
  animation: tauntFlash 250ms ease-out 1 forwards;
}

@keyframes tauntFlash {
  from {
    scale: 110%;
  }
}

.tauntText {
  position: absolute;
  font-weight: 700;
  animation: tauntText 1000ms ease-in 1 forwards;
  max-width: 250px;
  text-align: center;
  filter: drop-shadow(0px 0px 5px black);
  z-index: 5;
}

@keyframes tauntText {
  50% {
    opacity: 1;
    filter: blur(0px);
  }
  to {
    opacity: 0;
    scale: 90%;
    filter: blur(2px);
  }
}

#blockHitbox {
  aspect-ratio: 1 / 1;
  width: 150px;
  outline: 3px solid rgb(255, 255, 255, 0.1);
  position: absolute;
  display: flex;
  justify-content: center;
  align-items: center;
}

.blockHitboxFlashAnim {
  animation: blockHitboxFlash 0.25s linear 1 forwards;
}

@keyframes blockHitboxFlash {
  from {
    background-color: rgb(150, 150, 150);
  }
}

#innerBlockHitbox {
  aspect-ratio: 1 / 1;
  width: 50px;
  background-color: rgb(255, 255, 255, 0.1);
  mix-blend-mode: hard-light;
}

.blockHitboxAnim {
  animation: blockHitboxAnim var(--duration) linear 1 forwards;
}

@keyframes blockHitboxAnim {
  from {
    width: 50px;
    opacity: 0;
  }
  to {
    width: var(--size);
  }
}

.blockShockwave {
  aspect-ratio: 1 / 1;
  box-shadow: inset 0px 0px 5px rgb(255, 255, 255, 0.5);
  animation: blockShockwave 750ms ease-out 1 forwards;
}

@keyframes blockShockwave {
  to {
    scale: 2;
    opacity: 0;
  }
}

.sawblade {
  /* opacity: 0.75; */
  position: absolute;
  width: 25px;
  aspect-ratio: 1 / 1;
  animation: sawblade 500ms linear infinite forwards;
}

@keyframes sawblade {
  to {
    rotate: 360deg;
  }
}

.deathSquare1 {
  width:50px;
  height: 50px;
  background-color: white;
  animation: deathSquare1 cubic-bezier(.25,1,1,1) 2s forwards;
}

@keyframes deathSquare1 {
  to {
    scale: 200%;
    opacity: 0;
  }
}

.deathSquare2 {
  width: 50px;
  height: 50px;
  outline: 10px solid rgba(255, 255, 255, 0.5);
  animation: deathSquare2 cubic-bezier(.25,1,1,1) 2s forwards;
}

@keyframes deathSquare2 {
  to {
    scale: 300%;
    opacity: 0;
    outline: 0px solid white;
  }
}

.bullet {
  aspect-ratio: 1 / 1;
  background: url(media/bullet.png);
  background-size: contain;
  background-position: center;
  position: absolute;
  opacity: 0;
  z-index: 2;
}

@keyframes bulletIn {
  from {
    scale: 0%;
  }
}

.grenade {
  width: 10px;
  height: 10px;
  border-radius: 50%;
  background-color: red;
  transition: left ease-out 500ms, top ease-out 500ms;
}

.grenade::after {
  content: '';
  position: absolute;
  top: calc(-1 * (var(--explosionSize) - 10px) / 2);
  left: calc(-1 * (var(--explosionSize) - 10px) / 2);
  width: var(--explosionSize);
  height: var(--explosionSize);
  box-shadow: 0 0 0 2px rgb(255, 0, 0, 0.2);
}

.explosion {
  aspect-ratio: 1 / 1;
  position: absolute;
  border-radius: 50%;
  /* filter: blur(var(--explosionSize)); */
  background-color: white;
  mix-blend-mode: hard-light;
  animation: explosion 500ms ease-out 1 forwards;
}

@keyframes explosion {
  50% {
    filter: blur(0);
  }
  to {
    opacity: 0;
    filter: blur(10px);
  }
}

.explosionShockwave {
  position: absolute;
  aspect-ratio: 1 / 1;
  mix-blend-mode: hard-light;
  box-shadow: inset 0px 0px 25px white;
  animation: explosionShockwave cubic-bezier(.25,1,.6,1) 1s forwards;
}

@keyframes explosionShockwave {
  from {
    scale: 50%;
  }
  to {
    opacity: 0;
    scale: var(--shockwaveScale);
    box-shadow: inset 0px 0px 10px white;
  }
}

.explosionFlash {
  position: absolute;
  aspect-ratio: 1 / 1;
  filter: blur(var(--blurAmount));
  mix-blend-mode: hard-light;
  animation: explosion 500ms ease-out 1 forwards;
}

.beam {
  position: absolute;
  aspect-ratio: 1 / 1;
  opacity: 0.5;
  animation: beam var(--beamDuration) linear 1 reverse;
}

@keyframes beam {
  to {
    scale: 2;
    border-radius: 50%;
    rotate: 360deg;
    opacity: 0;
  }
}

enemy {
  position: absolute;
  aspect-ratio: 1 / 1;
  display: flex;
  justify-content: center;
  align-items: center;
  /* overflow: hidden; */
  z-index: 2;
  background-size: cover;
  background-position: center;
  transition: scale var(--bouncy) 500ms;
}
  
enemy::before {
  position: absolute;
  content: "";
  width: 100%;
  height: 500%;
  background: url(media/fire.gif);
  background-size: calc(500%);
  background-position: center;
  opacity: var(--fireOpacity);
}

@keyframes enemyJiggle {
  from {
    scale: 75% 125%;
  }
  to {
    scale: 100% 100%;
  }
}

enemy span {
  font-weight: 900;
  mix-blend-mode: difference;
}

.enemyPrepare {
  animation: enemyPrepare 1s ease-in-out infinite forwards;
}

@keyframes enemyPrepare {
  from {
    opacity: 50%;
  }
  50% {
    opacity: 75%;
  }
  100% {
    opacity: 50%;
  }
}

.enemySpawn {
  animation: enemySpawn 0.5s cubic-bezier(0,1,.5,1) 1 forwards;
}

@keyframes enemySpawn {
  from {
    outline: 5px solid rgb(255, 255, 255, 0.5);
    filter: brightness(200%);
  }
  to {
    outline: 0px solid rgb(255, 255, 255, 0.5);
    filter: brightness(100%);
  }
}

.enemyHealthBar {
  position: absolute;
  height: 5px;
  outline: 2px solid white;
}

.enemyInnerHealthBar {
  height: 100%;
  width: 100%;
  background-color: red;
  transition: width cubic-bezier(0,1,.5,1) 0.25s;
}

@keyframes healthBarFlash {
  from {
    filter: brightness(200%);
  }
}

.radiantEnemy {
  animation: radiant 1s linear infinite forwards;
  scale: 125%;
}

@keyframes radiant {
  0% {
    box-shadow: 0px 0px 0px 2px rgb(255, 100, 100, 0.75);
  }
  20% {
    box-shadow: 0px 0px 0px 2px rgb(255, 255, 100, 0.75);
  }
  40% {
    box-shadow: 0px 0px 0px 2px rgb(100, 255, 100, 0.75);
  }
  60% {
    box-shadow: 0px 0px 0px 2px rgb(100, 100, 255, 0.75);
  }
  80% {
    box-shadow: 0px 0px 0px 2px rgb(255, 100, 255, 0.75);
  }
  100% {
    box-shadow: 0px 0px 0px 2px rgb(255, 100, 100, 0.75);
  }
}

.radiantThing {
  aspect-ratio: 1 / 1;
  animation: radiantThing 1s ease-out 1 forwards, radiantThingLoop 1s linear infinite forwards;
}

@keyframes radiantThing {
  to {
    scale: 500%;
    opacity: 0;
  }
}

@keyframes radiantThingLoop {
  0% {
    box-shadow: inset 0px 0px 10px rgb(255, 100, 100, 0.75);
  }
  20% {
    box-shadow: inset 0px 0px 10px rgb(255, 255, 100, 0.75);
  }
  40% {
    box-shadow: inset 0px 0px 10px rgb(100, 255, 100, 0.75);
  }
  60% {
    box-shadow: inset 0px 0px 10px rgb(100, 100, 255, 0.75);
  }
  80% {
    box-shadow: inset 0px 0px 10px rgb(255, 100, 255, 0.75);
  }
  100% {
    box-shadow: inset 0px 0px 10px rgb(255, 100, 100, 0.75);
  }
}

.bloodStain {
  position: absolute;
  aspect-ratio: 1 / 1;
  opacity: 0.5;
  z-index: 1;
  /* background-color: white; */
  animation: bloodStainAnim 30s ease-out 30s 1 forwards, bloodStainIn 250ms cubic-bezier(0,1,.5,1) 1 forwards;
}

@keyframes bloodStainIn {
  from {
    transform: scale(50%);
  }
}

@keyframes bloodStainAnim {
  to {
    opacity: 0;
    scale: 90%;
  }
}

.enemyBullet {
  animation: bulletIn 250ms ease-out 1 forwards;
}

.bulletParry {
  aspect-ratio: 1 / 1;
  border-radius: 50%;
  background-color: white;
  mix-blend-mode: hard-light;
  animation: enemyBulletParry 250ms ease-out 1 forwards;
}

@keyframes enemyBulletParry {
  to {
    scale: 10000%;
    opacity: 0;
  }
}

.poisonField {
  position: absolute;
  aspect-ratio: 1 / 1;
  outline: 1px solid rgba(0, 255, 0, 0.5);
  background-color: rgb(0, 255, 0, 0.1);
  animation: poisonFieldAnim 0.5s cubic-bezier(0,1,.5,1) 1 forwards;
}

@keyframes poisonFieldAnim {
  from {
    opacity: 0;
    scale: 0;
  }
  to {
    opacity: 1;
    scale: 100%;
  }
}

.magnet {
  position: absolute;
  width: 20px;
  height: 20px;
  background-color: rgb(100, 100, 100);
}

.magnetHitbox {
  outline: 2px solid rgb(255, 255, 0, 0.1);
  width: 150px;
  height: 150px;
}






#dbFPS {
  position: absolute;
  top: 0px;
  right: 0px;
  z-index: 999;
  font-family: 'Roboto Mono', monospace;
}

#dbFPSMS {
  position: absolute;
  top: 15px;
  right: 0px;
  z-index: 999;
  font-family: 'Roboto Mono', monospace;
}

.popup {
  position: absolute;
  z-index: 4;
  filter: drop-shadow(0px 0px 10px black);
  white-space: nowrap;
  animation: popup 1s ease-out 1 forwards;
}

@keyframes popup {
  to {
    translate: var(--popupX) var(--popupY);
    rotate: var(--popupR);
    opacity: 0;
    scale: 50%;
  }
}

.particle {
  background-color: white;
  position: absolute;
  pointer-events: none;
  z-index: 5;
  animation: particleAnim var(--particleLifespan) var(--particleTimingFunction) 1 forwards;
}

@keyframes particleAnim {
  to {
    transform: translate(var(--particleX), var(--particleY)) rotate(var(--particleRotate)) scale(var(--particleSizeX), var(--particleSizeY));
    background-color: var(--particleColor);
    opacity: 0;
  }
}